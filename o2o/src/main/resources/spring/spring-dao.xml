<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc.xsd
     http://www.springframework.org/schema/cache 
     http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!--配置整合mybatis过程 -->
	<!--1.配置数据库相关参数properties的属性:${url} -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties" /> -->
	<bean class="com.lianxi.o2o.util.EncryptPropertyPlaceholderConfigurer">
	   <property name="locations">
	     <list>
	        <value>classpath:jdbc.properties</value>
	        <value>classpath:redis.properties</value>
	     </list>
	   </property>
	   <property name="fileEncoding" value="UTF-8"/>
	</bean>
	<!--2.数据库连接池 -->
	<!-- <bean id="abstractDataSource" abstract="true" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
		destroy-method="close"> -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!--关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!--获取连接超时时间 -->
		<property name="checkoutTimeout" value="10000" />
		<!--当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>
	<!-- <bean id="master" parent="abstractDataSource"> 配置连接池属性 <property name="driverClass" 
		value="${jdbc.driver}" /> <property name="jdbcUrl" value="${jdbc.master.url}" 
		/> <property name="user" value="${jdbc.username}" /> <property name="password" 
		value="${jdbc.password}" /> </bean> <bean id="slave" parent="abstractDataSource"> 
		配置连接池属性 <property name="driverClass" value="${jdbc.driver}" /> <property 
		name="jdbcUrl" value="${jdbc.slave.url}" /> <property name="user" value="${jdbc.username}" 
		/> <property name="password" value="${jdbc.password}" /> </bean> 配置动态数据源，这儿targetDataSources就是路由数据源所对应的名称 
		<bean id="dynamicDataSource" class="com.lianxi.o2o.dao.split.DynamicDataSource"> 
		<property name="targetDataSources"> <map> <entry value-ref="master" key="master"></entry> 
		<entry value-ref="slave" key="slave"></entry> </map> </property> </bean> 
		<bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy"> 
		<property name="targetDataSource"> <ref bean="dynamicDataSource" /> </property> 
		</bean> -->

	<!--3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!--配置MyBatis全局配置文件mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!--扫描entity包使用别名 -->
		<property name="typeAliasesPackage" value="com.lianxi.o2o.entity" />
		<!--扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!--4.配置扫描DAO接口包，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!--给出需要扫描Dao接口包 -->
		<property name="basePackage" value="com.lianxi.o2o.dao" />
	</bean>
</beans>
	      
